geom_point(size = 2) +
geom_line(aes(x, yhat), col = "blue") +
scale_x_continuous(limits = c(20, 40), name = "x", minor_breaks = NULL,
breaks = seq(22, 38, 2)) +
scale_y_continuous(minor_breaks = NULL, name = "y",
breaks = seq(round(min(d$y, na.rm = TRUE)), round(max(d$y, na.rm = TRUE)), 2)) +
theme_minimal(base_size = 12) +
coord_fixed()
library(dplyr)
d %>%
select(x, y, yhat, e) %>%
filter(!is.na(y)) %>%
arrange(x) %>% knitr::kable(digits = 1,
caption = "Observed and predicted values and the error.",
col.names = c("$x$", "$y$", "$\\hat{y}$", "$y - \\hat{y}$"))
d <- filter(d, !is.na(y))
a <- cor(d$y, d$x) * sd(d$y) / sd(d$x)
b <- mean(d$y) - a * mean(d$x)
paste("a = ", round(a, 3), ". b = ", round(b, 3))
library(tidyverse)
customers <- read_csv("../casestudy2/customer_survey_clean.csv")
contacts <- select(customers, contact, hardship) %>%
filter(!is.na(contact) & !is.na(hardship))
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
scale_size(guide = "none", range = c(0, 20))+
geom_smooth(data = contacts, aes(contact, hardship), method = "lm") +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
contacts
count(contacts, hardship, contact) %>%
filter(n > 0)
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n))
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey")
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
scale_size(guide = "none", range = c(0, 20))
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
scale_size(guide = "none", range = c(0, 20)) +
geom_smooth(data = contacts, aes(contact, hardship), method = "lm")
contacts
contacts
geom_smooth(data = contacts, aes(contact, hardship), method = "lm")
library(tibble)
library(ggplot2)
set.seed(12345)
a <- runif(1) / 2
b <- runif(n = 1, min = 0, max = 5)
d <- tibble(x = c(sample(22:38, 8), 20, 40),
yhat = a * x + b,
e = rnorm(10) * 2,
y = yhat + e)
d$y[d$x %in% c(20, 40)] <- NA
ggplot(d, aes(x, y)) +
geom_segment(aes(x = x, xend = x, y = y, yend = yhat), col = "red", linetype = 3) +
geom_point(size = 2) +
geom_line(aes(x, yhat), col = "blue") +
scale_x_continuous(limits = c(20, 40), name = "x", minor_breaks = NULL,
breaks = seq(22, 38, 2)) +
scale_y_continuous(minor_breaks = NULL, name = "y",
breaks = seq(round(min(d$y, na.rm = TRUE)), round(max(d$y, na.rm = TRUE)), 2)) +
theme_minimal(base_size = 12) +
coord_fixed()
library(dplyr)
d %>%
select(x, y, yhat, e) %>%
filter(!is.na(y)) %>%
arrange(x) %>% knitr::kable(digits = 1,
caption = "Observed and predicted values and the error.",
col.names = c("$x$", "$y$", "$\\hat{y}$", "$y - \\hat{y}$"))
d <- filter(d, !is.na(y))
a <- cor(d$y, d$x) * sd(d$y) / sd(d$x)
b <- mean(d$y) - a * mean(d$x)
paste("a = ", round(a, 3), ". b = ", round(b, 3))
library(tidyverse)
customers <- read_csv("../casestudy2/customer_survey_clean.csv")
contacts <- select(customers, contact, hardship) %>%
filter(!is.na(contact) & !is.na(hardship))
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
scale_size(guide = "none", range = c(0, 20)) +
geom_smooth(data = contacts, aes(contact, hardship), method = "lm") +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
hc_model <- lm(hardship ~ contact, data = contacts)
contacts <- select(customers, contact, hardship) %>%
filter(!is.na(contact) & !is.na(hardship))
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n))
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey")
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
scale_size(guide = "none", range = c(0, 20))
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
scale_size(guide = "none", range = c(0, 20)) +
geom_smooth(data = contacts, aes(contact, hardship), method = "lm")
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
scale_size(guide = "none", range = c(0, 20)) +
#geom_smooth(data = contacts, aes(contact, hardship), method = "lm") +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
scale_size(guide = "none", range = c(0, 20)) +
geom_smooth(data = contacts, aes(contact, hardship)
count(contacts, hardship, contact) %>%
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
scale_size(guide = "none", range = c(0, 20)) +
geom_smooth(data = contacts, aes(contact, hardship))
contacts
contacts <- select(customers, contact, hardship) %>%
filter(!is.na(contact) & !is.na(hardship))
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
scale_size(guide = "none", range = c(0, 20)) +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
contacts <- select(customers, contact, hardship) %>%
filter(!is.na(contact) & !is.na(hardship))
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
geom_smooth() +
scale_size(guide = "none", range = c(0, 20)) +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
geom_smooth(method = "lm") +
scale_size(guide = "none", range = c(0, 20)) +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
geom_smooth(data = contacts, method = "lm") +
scale_size(guide = "none", range = c(0, 20)) +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
count(contacts, hardship, contact) %>%
filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
geom_smooth(data = contacts, aes(contact, method), method = "lm") +
scale_size(guide = "none", range = c(0, 20)) +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
count(contacts, hardship, contact) %>%
#filter(n > 0) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
#geom_smooth(data = contacts, aes(contact, hardship), method = "lm") +
scale_size(guide = "none", range = c(0, 20)) +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
count(contacts, hardship, contact) %>%
ggplot(aes(contact, hardship, size = n)) +
geom_point(col = "darkgrey") +
#geom_smooth(data = contacts, aes(contact, hardship), method = "lm") +
scale_size(guide = "none", range = c(0, 20)) +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
count(contacts, hardship, contact) %>%
ggplot() +
geom_point(aes(contact, hardship, size = n), col = "darkgrey") +
#geom_smooth(data = contacts, aes(contact, hardship), method = "lm") +
scale_size(guide = "none", range = c(0, 20)) +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
count(contacts, hardship, contact) %>%
ggplot() +
geom_point(aes(contact, hardship, size = n), col = "darkgrey") +
geom_smooth(data = contacts, aes(contact, hardship), method = "lm") +
scale_size(guide = "none", range = c(0, 20)) +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
hc_model
paste("$$\hat{y} = ", hc_model$coefficients[1])
paste("$$\\hat{y} = ", hc_model$coefficients[1])
```{r, results='asis'}
paste("$$\\hat{y} = ", hc_model$coefficients[1])
paste("$$\\hat{y} = ", round(hc_model$coefficients[1]), 2)
round(hc_model$coefficients[1]), 2)
paste("$$\\hat{y} = ", round(hc_model$coefficients[1], 2))
paste("$$\\hat{y} = ", round(hc_model$coefficients[1], 2), "+", round(hc_model$coefficients[2], 2))
paste("$$\\hat{y} = ", round(hc_model$coefficients[1], 2), "+", round(hc_model$coefficients[2], 2), "$$")
```{r, results='markup'}
paste("$$\\hat{y} = ", round(hc_model$coefficients[1], 2), "+", round(hc_model$coefficients[2], 2), "$$")
cat(paste("$$\\hat{y} = ", round(hc_model$coefficients[1], 2), "+", round(hc_model$coefficients[2], 2), "$$"))
cat(paste("$$\\hat{y} = ", round(hc_model$coefficients[1], 2), "+", round(hc_model$coefficients[2], 2), "$$"))
formula <- paste("$$\\hat{y} = ", round(hc_model$coefficients[1], 2), "+", round(hc_model$coefficients[2], 2), "$$")
cat(formula)
expr(formula)
formula <- paste("$$\\hat{y} = ", round(hc_model$coefficients[1], 2), "+", round(hc_model$coefficients[2], 2), "$$")
cat(expr(formula))
formula <- paste("$$\\hat{y} = ", round(hc_model$coefficients[1], 2), "+", round(hc_model$coefficients[2], 2), "$$")
cat(formula)
formula <- paste0("$$\\hat{y} = ", round(hc_model$coefficients[1], 2), "+", round(hc_model$coefficients[2], 2), "$$")
cat(formula)
formula <- paste0("$$\\hat{y}=", round(hc_model$coefficients[1], 2), "+", round(hc_model$coefficients[2], 2), "$$")
cat(formula)
coef(hc_model)
a <- coef(hc_model)
a[1]
coef(hc_model)
sudo yay -Syu
knitr::include_graphics("images/bluepoles.jpg")
knitr::include_graphics("images/mondrian.jpg")
knitr::include_graphics("images/data-pixel-ratio.png")
knitr::include_graphics("images/stories.png")
library(tidyverse)
gormsey <- read_csv("../casestudy1/gormsey.csv")
ggplot(gormsey)
ggplot(gormsey, aes(Measure))
ggplot(gormsey, aes(Measure)) +
geom_bar()
turbidity <- filter(gormsey, Measure == "Turbidity")
ggplot(turbidity, aes(Date, Result, col = Town)) +
geom_line()
knitr::include_graphics("images/colorbrewer.png")
ggplot(gormsey, aes(Town, fill = Measure)) +
geom_bar() +
scale_fill_brewer(type = "qual",
palette = "Dark2")
ggplot(turbidity, aes(Date, Result, col = Town)) +
geom_line() +
facet_wrap(~Town)
thm <- filter(gormsey, Measure == "THM")
thm_grouped <- group_by(thm, Date)
thm_max <- summarise(thm_grouped, thm_max = max(Result))
ggplot(thm_max, aes(Date, thm_max)) +
geom_smooth(method = "lm") +
geom_line() +
geom_hline(yintercept = 0.25, col = "red")
ggplot(turbidity, aes(Town, Result, fill = Town)) +
geom_boxplot() +
scale_y_log10(name = "Samples",
n.breaks = 10) +
coord_flip()
ggplot(turbidity, aes(Town, Result, fill = Town)) +
geom_boxplot() +
scale_y_log10(name = "Samples (log)",
n.breaks = 10) +
coord_flip()
ggsave("images/case-study-01.png")
9/2
4.5/8
9/16
library(ggplot2)
ggplot(pii_wide, aes(p01, p02)) +
geom_jitter() +
labs(title = "Scatterplot of p01 and p02") +
theme_bw(base_size = 12)
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
knitr::include_graphics("images/tap-water-advertisement.jpg")
knitr::include_graphics("images/pii-model.png")
library(readr)
pii_long <- read_csv("../casestudy2/pii_long.csv")
library(tidyr)
pii_wide <- pivot_wider(pii_long, names_from = Item, values_from = Response)
cor(pii_wide$p01, pii_wide$p02)
c_matrix <- cor(pii_wide[, -1])
round(c_matrix, 2)
cor.test(pii_wide$p01, pii_wide$p02)
library(ggplot2)
ggplot(pii_wide, aes(p01, p02)) +
geom_jitter() +
labs(title = "Scatterplot of p01 and p02") +
theme_bw(base_size = 12)
library(corrplot)
corrplot(c_matrix, type = "lower")
round(cov(pii_wide[, -1]), 2)
pii_cov <- cov(pii_wide[, -1])
N <- ncol(pii_cov)
v <- mean(diag(pii_cov))
c <- mean(pii_cov[lower.tri(pii_cov)])
(N * c) / (v + (N - 1) * c)
set.seed(1969)
customers <- tibble(id = LETTERS[1:10],
weekday = c(rnorm(5, 155 * 2.7, 200), rnorm(5, 750, 200)),
weekend = c(rnorm(5, 250 * 2.7, 200), rnorm(5, 50, 10)))
ggplot(customers, aes(weekday, weekend)) +
geom_label(aes(label = id)) +
labs(title = "Simulated weekday and weekend consumption",
subtitle = "Cluster analysis example",
x = "Average weekday consumption", y = "Average weekend consumption") +
theme_bw(base_size = 12)
s <- data.frame(x = c(0, 1),
y = c(0, 1))
dist(s)
dist(s, method = "manhatten")
dist(s, method = "manhattan")
dist(s) # Euclidean
dist(s, method = "manhattan")
s <- data.frame(x = c(0, 1, 3),
y = c(0, 1, 5))
dist(s) # Euclidean
dist(s, method = "manhattan")
s <- data.frame(x = c(0, 1, 3),
y = c(0, 1, 5))
s
dist(s) # Euclidean
s <- data.frame(x = c(0, 1, 3),
y = c(0, 1, 5))
s
dist(s) # Euclidean
s
s <- matrix(c(0, 1, 3, 0, 1, 5))
s
s <- matrix(c(0, 1, 3, 0, 1, 5), ncol = 2)
s
dist(s) # Euclidean
dist(s, method = "manhattan")
s
pii_clust <- t(pii_wide[, -1]) %>%
scale() %>%
dist() %>%
hclust()
plot(pii_clust,
main = "Personal Involvement Index")
rect.hclust(pii_clust, k = 2, border = 2:3)
plot(rev(pii_clust$height), type = "b")
plot(pii_clust,
main = "Personal Involvement Index")
rect.hclust(pii_clust, k = 2, border = 2:3)
plot(pii_clust,
main = "Personal Involvement Index")
rect.hclust(pii_clust, k = 2, border = 2:3)
plot(pii_clust,
main = "Personal Involvement Index")
rect.hclust(pii_clust, k = 2, border = 2:3)
plot(pii_clust,
main = "Personal Involvement Index")
rect.hclust(pii_clust, k = 2, border = 2:3)
plot(pii_clust,
main = "Personal Involvement Index")
rect.hclust(pii_clust, k = 2, border = 2:3)
plot(pii_clust,
main = "Personal Involvement Index")
plot(pii_clust,
main = NULL)
plot(pii_clust,
main = NULL, sub = NULL)
plot(pii_clust,
main = NULL, sub = "NULL")
plot(pii_clust,
main = NULL, sub = NA)
png("images/case-study-02.png", width = 800, height = 450)
plot(pii_clust,
main = NULL, sub = "Survey Items")
rect.hclust(pii_clust, k = 2, border = 2:3)
dev.off()
a1 <- -a / 2
b1 <- mean(d$y, na.rm = TRUE) - a1 * mean(d$x, na.rm = TRUE)
a2 <- a / 2
b2 <- mean(d$y, na.rm = TRUE) - a2 * mean(d$x, na.rm = TRUE)
d1 <- d %>%
mutate(Mean = mean(y, na.rm = TRUE),
`Rotate 1`= a1 * x + b1,
`Rotate 2`= a2 * x + b2,) %>%
select(x, y, Mean, `Rotate 1`, `Rotate 2`, Model = yhat) %>%
pivot_longer(-1:-2) %>%
mutate(name = fct_relevel(name, c("Mean", "Rotate 1", "Rotate 2", "Model")))
ss <- d1 %>%
group_by(name) %>%
summarise(meanx = mean(x),
meany = mean(y, na.rm = TRUE),
SS = sum(abs(value - y)^2, na.rm = TRUE),
SSt = paste("SS =", round(SS, 2)))
ggplot(d1) +
geom_segment(aes(x = x, xend = x, y = y, yend = value), col = "red") +
geom_point(aes(x, y), size = 2) +
geom_line(aes(x, value), col = "blue") +
geom_point(data = ss, aes(meanx, meany), col = "blue", size = 2) +
geom_text(data = ss, aes(x = mean(d1$x), y = (min(d1$value) + 5), label = SSt)) +
facet_wrap(~name, ncol = 2) +
coord_equal() +
theme_minimal(base_size = 18) +
theme(panel.spacing = unit(2, "lines"))
ggplot(d1) +
geom_segment(aes(x = x, xend = x, y = y, yend = value), col = "red", linetype = 2) +
geom_point(aes(x, y), size = 2) +
geom_line(aes(x, value), col = "blue") +
geom_point(data = ss, aes(meanx, meany), col = "blue", size = 2) +
geom_text(data = ss, aes(x = mean(d1$x), y = (min(d1$value) + 5), label = SSt)) +
facet_wrap(~name, ncol = 2) +
coord_equal() +
theme_minimal(base_size = 12) +
theme(panel.spacing = unit(2, "lines"))
library(tidyverse)
set.seed(123)
d <- tibble(x = c(sample(22:38, 8), 20, 40),
y = round(runif(1), 2) * x + sample(5:10 , 1) + rnorm(10) * 1.5)
d$y[d$x %in% c(20, 40)] <- NA
ab <- lm(y ~ x, d)
a <- coef(ab)[2]
b <- coef(ab)[1]
d$yhat <- a * d$x + b
ggplot(d, aes(x, y)) +
geom_segment(aes(x = x, xend = x, y = y, yend = yhat), col = "red", linetype = 3) +
geom_point(size = 2) +
geom_line(aes(x, yhat), col = "blue") +
scale_x_continuous(limits = c(20, 40), name = "x", minor_breaks = NULL,
breaks = seq(22, 38, 2)) +
scale_y_continuous(minor_breaks = NULL, name = "y",
breaks = seq(round(min(d$y, na.rm = TRUE)), round(max(d$y, na.rm = TRUE)), 2)) +
theme_minimal(base_size = 12) +
coord_fixed()
d %>%
filter(!is.na(y)) %>%
mutate(e = y - yhat) %>%
filter(!is.na(y)) %>%
arrange(x) %>% knitr::kable(digits = 1,
caption = "Observed and predicted values and the residuals.",
col.names = c("$x$", "$y$", "$\\hat{y}$", "$y - \\hat{y}$"))
a1 <- -a / 2
b1 <- mean(d$y, na.rm = TRUE) - a1 * mean(d$x, na.rm = TRUE)
a2 <- a / 2
b2 <- mean(d$y, na.rm = TRUE) - a2 * mean(d$x, na.rm = TRUE)
d1 <- d %>%
mutate(Mean = mean(y, na.rm = TRUE),
`Rotate 1`= a1 * x + b1,
`Rotate 2`= a2 * x + b2,) %>%
select(x, y, Mean, `Rotate 1`, `Rotate 2`, Model = yhat) %>%
pivot_longer(-1:-2) %>%
mutate(name = fct_relevel(name, c("Mean", "Rotate 1", "Rotate 2", "Model")))
ss <- d1 %>%
group_by(name) %>%
summarise(meanx = mean(x),
meany = mean(y, na.rm = TRUE),
SS = sum(abs(value - y)^2, na.rm = TRUE),
SSt = paste("SS =", round(SS, 2)))
ggplot(d1) +
geom_segment(aes(x = x, xend = x, y = y, yend = value), col = "red", linetype = 2) +
geom_point(aes(x, y), size = 2) +
geom_line(aes(x, value), col = "blue") +
geom_point(data = ss, aes(meanx, meany), col = "blue", size = 2) +
geom_text(data = ss, aes(x = mean(d1$x), y = (min(d1$value) + 5), label = SSt)) +
facet_wrap(~name, ncol = 2) +
coord_equal() +
theme_minimal(base_size = 12) +
theme(panel.spacing = unit(2, "lines"))
summary(hc_model)
hc_model_summary <- summary(hc_model)
hc_model_summary$fstatistic
hc_model$residuals
sum(hc_model$residuals^2)
hc_model
hc_model$terms
contacts
contacts$hardship - mean(contacts$hardship)
(contacts$hardship - mean(contacts$hardship))^2
sum((contacts$hardship - mean(contacts$hardship))^2)
sum(hc_model$residuals^2)/ sum((contacts$hardship - mean(contacts$hardship))^2)
hc_model_summary$fstatistic
ssmean <- sum((contacts$hardship - mean(contacts$hardship))^2)
ssfit <- sum(hc_model$residuals^2)
ssmean <- sum((contacts$hardship - mean(contacts$hardship))^2)
ssfit - ssmean
(ssmean - ssfit)/ssfit
hc_model_summary$fstatistic
(ssmean - ssfit)/(ssfit/433)
hc_model_summary$fstatistic
