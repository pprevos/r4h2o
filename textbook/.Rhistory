hc_model_summary$fstatistic
plot(c(3, 7), c(3, 7), pch = 19,
xlim = c(0, 10), ylim = c(0, 10), ylab = "q", xlab = "p")
lines(c(3, 7, 7), c(3, 3, 7), )
lines(c(3, 7, 7), c(3, 3, 7), lty = 2)
plot(c(3, 7), c(3, 7), pch = 19,
xlim = c(0, 10), ylim = c(0, 10), ylab = "q", xlab = "p")
lines(c(3, 7, 7), c(3, 3, 7), lty = 2)
lines(c(3, 7, 7), c(3, 3, 7), lty = 2, col = "red")
lines(c(3, 7), c(3, 7), tyy = 3, col = "red")
plot(c(3, 7), c(3, 7), pch = 19,
xlim = c(0, 10), ylim = c(0, 10), ylab = "q", xlab = "p")
lines(c(3, 7, 7), c(3, 3, 7), lty = 2, col = "red")
lines(c(3, 7), c(3, 7), tyy = 1, col = "red")
plot(c(3, 7), c(3, 7), pch = 19,
xlim = c(0, 10), ylim = c(0, 10), ylab = "q", xlab = "p")
lines(c(3, 7, 7), c(3, 3, 7), lty = 2, col = "red")
lines(c(3, 7), c(3, 7), lty = 3, col = "red")
plot(c(3, 7), c(3, 7), pch = 19, axes = FALSE,
xlim = c(0, 10), ylim = c(0, 10), ylab = "q", xlab = "p")
lines(c(3, 7, 7), c(3, 3, 7), lty = 2, col = "red")
lines(c(3, 7), c(3, 7), lty = 3, col = "red")
plot(c(3, 7), c(3, 7), pch = 19, axes = FALSE,
xlab = "p", ylab = "q")
lines(c(3, 7, 7), c(3, 3, 7), lty = 2, col = "red")
lines(c(3, 7), c(3, 7), lty = 3, col = "red")
legend("topleft", legend = c("Excel", "Weibull"), col = c("blue", "red"), lwd = 1, lty = c(2, 3))
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3))
plot(c(3, 7), c(3, 7), pch = 19, axes = FALSE,
xlab = "p", ylab = "q")
lines(c(3, 7, 7), c(3, 3, 7), lty = 2, col = "blue")
lines(c(3, 7), c(3, 7), lty = 3, col = "red")
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3))
lines(c(3, 7, 7), c(3, 3, 7), lty = 3, col = "red")
lines(c(3, 7), c(3, 7), lty = 2, col = "blue")
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3))
plot(c(3, 7), c(3, 7), pch = 19, axes = FALSE,
xlab = "p", ylab = "q")
lines(c(3, 7, 7), c(3, 3, 7), lty = 3, col = "red")
lines(c(3, 7), c(3, 7), lty = 2, col = "blue")
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3))
plot(c(3, 7), c(3, 7), pch = 19, axes = FALSE)
lines(c(3, 7, 7), c(3, 3, 7), lty = 3, col = "red")
lines(c(3, 7), c(3, 7), lty = 2, col = "blue")
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3))
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3), border = FALSE)
plot(c(3, 7), c(3, 7), pch = 19, axes = FALSE)
lines(c(3, 7, 7), c(3, 3, 7), lty = 3, col = "red")
lines(c(3, 7), c(3, 7), lty = 2, col = "blue")
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3), border = FALSE)
plot(c(3, 7), c(3, 7), pch = 19, axes = FALSE)
lines(c(3, 7, 7), c(3, 3, 7), lty = 3, col = "red")
lines(c(3, 7), c(3, 7), lty = 2, col = "blue")
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3), border = FALSE)
plot(c(3, 7), c(3, 7), pch = 19, axes = FALSE)
lines(c(3, 7, 7), c(3, 3, 7), lty = 3, col = "red")
lines(c(3, 7), c(3, 7), lty = 2, col = "blue")
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3), border = FALSE)
help(legend)
plot(c(3, 7), c(3, 7), pch = 19, axes = FALSE)
lines(c(3, 7, 7), c(3, 3, 7), lty = 3, col = "red")
lines(c(3, 7), c(3, 7), lty = 2, col = "blue")
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3), border = NA)
plot(c(3, 7), c(3, 7), pch = 19, axes = FALSE)
lines(c(3, 7, 7), c(3, 3, 7), lty = 3, col = "red")
lines(c(3, 7), c(3, 7), lty = 2, col = "blue")
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3))
plot(c(3, 7), c(3, 7), pch = 19, axes = FALSE)
lines(c(3, 7, 7), c(3, 3, 7), lty = 3, col = "red")
lines(c(3, 7), c(3, 7), lty = 2, col = "blue")
legend("topleft", legend = c("Euclidean", "Taxi cab"), col = c("blue", "red"),
lwd = 1, lty = c(2, 3))
leg.txt <- c("Setosa     Petals", "Setosa     Sepals",
"Versicolor Petals", "Versicolor Sepals")
y.leg <- c(4.5, 3, 2.1, 1.4, .7)
cexv  <- c(1.2, 1, 4/5, 2/3, 1/2)
matplot(c(1, 8), c(0, 4.5), type = "n", xlab = "Length", ylab = "Width",
main = "Petal and Sepal Dimensions in Iris Blossoms")
for (i in seq(cexv)) {
text  (1, y.leg[i] - 0.1, paste("cex=", formatC(cexv[i])), cex = 0.8, adj = 0)
legend(3, y.leg[i], leg.txt, pch = "sSvV", col = c(1, 3), cex = cexv[i])
}
## cex *vector* [in R <= 3.5.1 has 'if(xc < 0)' w/ length(xc) == 2]
legend(6,1, leg.txt, pch = "sSvV", col = c(1, 3), cex = 1+(-1:2)/8)
## 'merge = TRUE' for merging lines & points:
x <- seq(-pi, pi, length.out = 65)
plot(x, sin(x), type = "l", ylim = c(-1.2, 1.8), col = 3, lty = 2)
points(x, cos(x), pch = 3, col = 4)
lines(x, tan(x), type = "b", lty = 1, pch = 4, col = 6)
title("legend(..., lty = c(2, -1, 1), pch = c(NA, 3, 4), merge = TRUE)",
cex.main = 1.1)
legend(-1, 1.9, c("sin", "cos", "tan"), col = c(3, 4, 6),
text.col = "green4", lty = c(2, -1, 1), pch = c(NA, 3, 4),
merge = TRUE, bg = "gray90")
## right-justifying a set of labels: thanks to Uwe Ligges
x <- 1:5; y1 <- 1/x; y2 <- 2/x
plot(rep(x, 2), c(y1, y2), type = "n", xlab = "x", ylab = "y")
lines(x, y1); lines(x, y2, lty = 2)
temp <- legend("topright", legend = c(" ", " "),
text.width = strwidth("1,000,000"),
lty = 1:2, xjust = 1, yjust = 1,
title = "Line Types")
text(temp$rect$left + temp$rect$w, temp$text$y,
c("1,000", "1,000,000"), pos = 2)
##--- log scaled Examples ------------------------------
leg.txt <- c("a one", "a two")
par(mfrow = c(2, 2))
for(ll in c("","x","y","xy")) {
plot(2:10, log = ll, main = paste0("log = '", ll, "'"))
abline(1, 1)
lines(2:3, 3:4, col = 2)
points(2, 2, col = 3)
rect(2, 3, 3, 2, col = 4)
text(c(3,3), 2:3, c("rect(2,3,3,2, col=4)",
"text(c(3,3),2:3,\"c(rect(...)\")"), adj = c(0, 0.3))
legend(list(x = 2,y = 8), legend = leg.txt, col = 2:3, pch = 1:2,
lty = 1, merge = TRUE)   #, trace = TRUE)
}
par(mfrow = c(1,1))
##-- Math expressions:  ------------------------------
x <- seq(-pi, pi, length.out = 65)
plot(x, sin(x), type = "l", col = 2, xlab = expression(phi),
ylab = expression(f(phi)))
abline(h = -1:1, v = pi/2*(-6:6), col = "gray90")
lines(x, cos(x), col = 3, lty = 2)
ex.cs1 <- expression(plain(sin) * phi,  paste("cos", phi))  # 2 ways
utils::str(legend(-3, .9, ex.cs1, lty = 1:2, plot = FALSE,
adj = c(0, 0.6)))  # adj y !
legend(-3, 0.9, ex.cs1, lty = 1:2, col = 2:3,  adj = c(0, 0.6))
require(stats)
x <- rexp(100, rate = .5)
hist(x, main = "Mean and Median of a Skewed Distribution")
abline(v = mean(x),   col = 2, lty = 2, lwd = 2)
abline(v = median(x), col = 3, lty = 3, lwd = 2)
ex12 <- expression(bar(x) == sum(over(x[i], n), i == 1, n),
hat(x) == median(x[i], i == 1, n))
utils::str(legend(4.1, 30, ex12, col = 2:3, lty = 2:3, lwd = 2))
## 'Filled' boxes -- for more, see example(plot.factor)
op <- par(bg = "white") # to get an opaque box for the legend
plot(cut(weight, 3) ~ group, data = PlantGrowth, col = NULL,
density = 16*(1:3))
par(op)
## Using 'ncol' :
x <- 0:64/64
matplot(x, outer(x, 1:7, function(x, k) sin(k * pi * x)),
type = "o", col = 1:7, ylim = c(-1, 1.5), pch = "*")
op <- par(bg = "antiquewhite1")
legend(0, 1.5, paste("sin(", 1:7, "pi * x)"), col = 1:7, lty = 1:7,
pch = "*", ncol = 4, cex = 0.8)
legend(.8,1.2, paste("sin(", 1:7, "pi * x)"), col = 1:7, lty = 1:7,
pch = "*", cex = 0.8)
legend(0, -.1, paste("sin(", 1:4, "pi * x)"), col = 1:4, lty = 1:4,
ncol = 2, cex = 0.8)
legend(0, -.4, paste("sin(", 5:7, "pi * x)"), col = 4:6,  pch = 24,
ncol = 2, cex = 1.5, lwd = 2, pt.bg = "pink", pt.cex = 1:3)
par(op)
## point covering line :
y <- sin(3*pi*x)
plot(x, y, type = "l", col = "blue",
main = "points with bg & legend(*, pt.bg)")
points(x, y, pch = 21, bg = "white")
legend(.4,1, "sin(c x)", pch = 21, pt.bg = "white", lty = 1, col = "blue")
## legends with titles at different locations
plot(x, y, type = "n")
legend("bottomright", "(x,y)", pch=1, title= "bottomright")
legend("bottom",      "(x,y)", pch=1, title= "bottom")
legend("bottomleft",  "(x,y)", pch=1, title= "bottomleft")
legend("left",        "(x,y)", pch=1, title= "left")
legend("topleft",     "(x,y)", pch=1, title= "topleft, inset = .05", inset = .05)
legend("top",         "(x,y)", pch=1, title= "top")
legend("topright",    "(x,y)", pch=1, title= "topright, inset = .02",inset = .02)
legend("right",       "(x,y)", pch=1, title= "right")
legend("center",      "(x,y)", pch=1, title= "center")
# using text.font (and text.col):
op <- par(mfrow = c(2, 2), mar = rep(2.1, 4))
c6 <- terrain.colors(10)[1:6]
for(i in 1:4) {
plot(1, type = "n", axes = FALSE, ann = FALSE); title(paste("text.font =",i))
legend("top", legend = LETTERS[1:6], col = c6,
ncol = 2, cex = 2, lwd = 3, text.font = i, text.col = c6)
}
par(op)
scale()
scale
help("scale")
cov(customers_scaled)
customers_scaled <- scale(customers[, -1])
customers_scaled
cov(customers_scaled)
customers_scaled
customers_scaled
View(customers_scaled)
class(customers_scaled)
customers_scaled[1]
customers_scaled[2]
customers_scaled[20]
customers_scaled[22]
customers_scaled[23]
customers_scaled
class(customers_scaled)
customers$weekday - mean(customers$weekday)
(customers$weekday - mean(customers$weekday))/sd(customers$weekday)
# Chunk 1
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
# Chunk 2: pii-model
knitr::include_graphics("images/pii-model.png")
# Chunk 3
library(readr)
pii_long <- read_csv("../casestudy2/pii_long.csv")
library(tidyr)
pii_wide <- pivot_wider(pii_long, names_from = Item, values_from = Response)
# Chunk 5
cor(pii_wide$p01, pii_wide$p02)
c_matrix <- cor(pii_wide[, -1])
round(c_matrix, 2)
# Chunk 7: jitter
library(ggplot2)
ggplot(pii_wide, aes(p01, p02)) +
geom_jitter(width = .5, height = .5, alpha = .5) +
labs(title = "Scatterplot of items p01 and p02") +
theme_bw(base_size = 10)
# Chunk 8: corrplot
library(corrplot)
corrplot(c_matrix, type = "lower", diag = FALSE)
# Chunk 9
c_test <- cor.test(pii_wide$p01, pii_wide$p02)
c_test
# Chunk 10
str(c_test)
# Chunk 11
cov_0102 <- with(pii_wide, sum((p01 - mean(p01)) * (p02 - mean(p02)))) / (nrow(pii_wide) - 1)
cov(pii_wide$p01, pii_wide$p02) == cov_0102
cor_0102 <- cov_0102 / (sd(pii_wide$p01) * sd(pii_wide$p02))
# Chunk 12
round(cov(pii_wide[, -1]), 2)
# Chunk 13
pii_cov <- cov(pii_wide[, -1])
N <- ncol(pii_cov)
v <- mean(diag(pii_cov))
c <- mean(pii_cov[lower.tri(pii_cov)])
(N * c) / (v + (N - 1) * c)
# Chunk 14: cexample
set.seed(1234)
customers <- tibble(id = LETTERS[1:10],
property_size = c(rnorm(5, 500, 100), rnorm(5, 1000, 200)),
consumption = c(rnorm(5, 500, 200), rnorm(5, 1000, 10)))
ggplot(customers, aes(property_size, consumption)) +
geom_label(aes(label = id)) +
labs(title = "Simulated weekday and weekend consumption",
subtitle = "Cluster analysis example",
x = "Property Size", y = "Annual consumption") +
theme_bw(base_size = 10)
customers
with(customers, consumption - mean(consumption) / sd(consumption))
customers_scaled
customers_scaled <- scale(customers[, -1])
customers_scaled
with(customers, consumption - mean(consumption) / sd(consumption))
customers[, -1]
customers_scaled <- scale(customers[, -1])
customers_scaled
help(scale)
with(customers, consumption - mean(consumption) / sd(consumption))
with(customers, consumption - mean(consumption))
mean(with(customers, consumption - mean(consumption)))
with(customers, consumption - mean(consumption))
with(customers, mean(consumption))
with(customers, consumption - mean(consumption))
with(customers, (consumption - mean(consumption)) / sd(consumption))
customers_scaled
s <- matrix(c(1, 3, 1, 5), ncol = 2)
s
dist(s)
dist(s, method = "manhattan")
customers_dist
customers_dist <- dist(customers_scaled)
round(customers_dist, 2)
set.seed(1234)
customers <- tibble(id = LETTERS[1:10],
property_size = c(rnorm(5, 500, 100), rnorm(5, 1000, 200)),
consumption = c(rnorm(5, 500, 200), rnorm(5, 1000, 10)))
ggplot(customers, aes(property_size, consumption)) +
geom_label(aes(label = id)) +
labs(title = "Simulated weekday and weekend consumption",
subtitle = "Cluster analysis example",
x = "Property Size", y = "Annual consumption") +
theme_bw(base_size = 10)
customers$segment <- cutree(customer_clusters, k = 2)
ggplot(customers, aes(property_size, consumption, fill = factor(segment))) +
geom_label(aes(label = id)) +
scale_fill_manual(values = c("dodgerblue", "lightgrey")) +
labs(title = "Simulated weekday and weekend consumption",
subtitle = "Cluster analysis example",
x = "Property Size", y = "Annual consumption") +
theme_bw(base_size = 10)
customer_clusters <- hclust(customers_dist)
customer_clusters
plot(customer_clusters,
main = "Clustering Example",
sub = "Simulated data",
labels = customers$id)
plot(customer_clusters,
main = "Clustering Example",
sub = "Simulated data",
labels = customers$id)
customers$segment <- cutree(customer_clusters, k = 2)
ggplot(customers, aes(property_size, consumption, fill = factor(segment))) +
geom_label(aes(label = id)) +
scale_fill_manual(values = c("dodgerblue", "lightgrey")) +
labs(title = "Simulated weekday and weekend consumption",
subtitle = "Cluster analysis example",
x = "Property Size", y = "Annual consumption") +
theme_bw(base_size = 10)
ggplot(customers, aes(property_size, consumption, fill = factor(segment))) +
geom_label(aes(label = id)) +
scale_fill_manual(values = c("dodgerblue", "lightgrey"), name = "Segment") +
labs(title = "Simulated weekday and weekend consumption",
subtitle = "Cluster analysis example",
x = "Property Size", y = "Annual consumption") +
theme_bw(base_size = 10)
plot(rev(customer_clusters$height), type = "b")
pii_clust <- t(pii_wide[, -1]) %>%
scale() %>%
dist() %>%
hclust()
plot(pii_clust,
main = "Personal Involvement Index")
rect.hclust(pii_clust, k = 2, border = 2:3)
plot(pii_clust,
main = "Personal Involvement Index",
sub = "Survey Items", cex = 1.2)
rect.hclust(pii_clust, k = 2, border = 2:3)
plot(rev(pii_clust$height), type = "b")
library(dplyr)
pii <- pii_wide %>%
group_by(id) %>%
summarise(Cognitive = p01 + p02 + p03 + p04 + p05,
Affective = p06 + p07 + p08 + p09 + p10,
Involvement = Cognitive + Affective) %>%
pivot_longer(Cognitive:Involvement,
names_to = "Dimension",
values_to = "Score")
ggplot(pii, aes(Score)) +
geom_histogram(bins = 30) +
facet_wrap(~Dimension, scales = "free_x") +
labs(title = "Personal Involvement Index",
subtitle = "Tap Water Customers in Gormsey") +
theme_bw(base_size = 10)
hc_model
summary(hc_model)
a <- summary(hc_model)
a$call
contacts
nrow(contacts)
library(tidyverse)
set.seed(123)
d <- tibble(x = c(sample(22:38, 8), 20, 40),
y = round(runif(1), 2) * x + sample(5:10 , 1) + rnorm(10) * 1.5)
d$y[d$x %in% c(20, 40)] <- NA
ab <- lm(y ~ x, d)
a <- coef(ab)[2]
b <- coef(ab)[1]
d$yhat <- a * d$x + b
ggplot(d, aes(x, y)) +
geom_segment(aes(x = x, xend = x, y = y, yend = yhat), col = "red", linetype = 3) +
geom_point(size = 1) +
geom_line(aes(x, yhat), col = "blue") +
scale_x_continuous(limits = c(20, 40), name = "x", minor_breaks = NULL,
breaks = seq(22, 38, 2)) +
scale_y_continuous(minor_breaks = NULL, name = "y",
breaks = seq(round(min(d$y, na.rm = TRUE)), round(max(d$y, na.rm = TRUE)), 2)) +
theme_minimal(base_size = 12) +
coord_fixed()
library(tidyverse)
set.seed(123)
d <- tibble(x = c(sample(22:38, 8), 20, 40),
y = round(runif(1), 2) * x + sample(5:10 , 1) + rnorm(10) * 1.5)
d$y[d$x %in% c(20, 40)] <- NA
ab <- lm(y ~ x, d)
a <- coef(ab)[2]
b <- coef(ab)[1]
d$yhat <- a * d$x + b
ggplot(d, aes(x, y)) +
geom_segment(aes(x = x, xend = x, y = y, yend = yhat), col = "red", linetype = 3) +
geom_point(size = 1) +
geom_line(aes(x, yhat), col = "blue") +
scale_x_continuous(limits = c(20, 40), name = "x", minor_breaks = NULL,
breaks = seq(22, 38, 2)) +
scale_y_continuous(minor_breaks = NULL, name = "y",
breaks = seq(round(min(d$y, na.rm = TRUE)), round(max(d$y, na.rm = TRUE)), 2)) +
theme_minimal(base_size = 12) +
coord_fixed()
a1 <- -a / 2
b1 <- mean(d$y, na.rm = TRUE) - a1 * mean(d$x, na.rm = TRUE)
a2 <- a / 2
b2 <- mean(d$y, na.rm = TRUE) - a2 * mean(d$x, na.rm = TRUE)
d1 <- d %>%
mutate(Mean = mean(y, na.rm = TRUE),
`Rotate 1`= a1 * x + b1,
`Rotate 2`= a2 * x + b2,) %>%
select(x, y, Mean, `Rotate 1`, `Rotate 2`, Model = yhat) %>%
pivot_longer(-1:-2) %>%
mutate(name = fct_relevel(name, c("Mean", "Rotate 1", "Rotate 2", "Model")))
ss <- d1 %>%
group_by(name) %>%
summarise(meanx = mean(x),
meany = mean(y, na.rm = TRUE),
SS = sum(abs(value - y)^2, na.rm = TRUE),
SSt = paste("SS =", round(SS, 2)))
ggplot(d1) +
geom_segment(aes(x = x, xend = x, y = y, yend = value), col = "red", linetype = 2) +
geom_point(aes(x, y), size = 2) +
geom_line(aes(x, value), col = "blue") +
geom_point(data = ss, aes(meanx, meany), col = "blue", size = 2) +
geom_text(data = ss, aes(x = mean(d1$x), y = (min(d1$value) + 5), label = SSt)) +
facet_wrap(~name, ncol = 2) +
coord_equal() +
theme_minimal(base_size = 12) +
theme(panel.spacing = unit(2, "lines"))
library(tidyverse)
customers <- read_csv("../casestudy2/customer_survey_clean.csv")
cor(customers$contact, customers$hardship, use = "complete.obs")
count(customers, hardship, contact) %>%
ggplot() +
geom_point(aes(contact, hardship, size = n), col = "darkgrey") +
geom_smooth(data = customers, aes(contact, hardship), method = "lm") +
scale_size(guide = "none", range = c(0, 20)) +
labs(title = "Gormsey Customer Survey",
x = "Contact frequency", y = "Financial hardship") +
theme_light(base_size = 10)
op <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))
ff <- y ~ x
mods <- setNames(as.list(1:4), paste0("lm", 1:4))
for(i in 1:4) {
ff[2:3] <- lapply(paste0(c("y","x"), i), as.name)
mods[[i]] <- lmi <- lm(ff, data = anscombe)
}
for(i in 1:4) {
ff[2:3] <- lapply(paste0(c("y", "x"), i),  as.name)
plot(ff, data = anscombe, col = "red", pch = 21, bg = "orange", cex = 1.2,
xlim = c(3, 19), ylim = c(3, 13))
abline(mods[[i]], col = "blue")
}
data(anscombe)
anscombe
cont_hard <- customers %>%
select(id, contact, hardship) %>%
filter(!is.na(contact) | !is.na(hardship))
hc_model <- lm(hardship ~ contact, data = cont_hard)
pii
pii_wide
library(psych)
omega(pii_wide[, 01])
omega(pii_wide[, -1])
install.packages("GPArotation")
omega(pii_wide[, -1])
omega(pii_wide[, -1], nfactors = 2)
library(tibble)
library(rgl)
n <- 100
s <- 20
b0 <- 10
b1 <- 2.5
b2 <- 3.2
e <- 10
d <- tibble(p = sample(1:n, s),
q = sample(n:(2 * n - 1), s),
r = (b1 * p + rnorm(s) * e) + (b2 * q + rnorm(s) * e) + b0)
fit <- lm(r ~ p + q, d)
plot3d(fit, which = 1:3, size = 5, col = "red", plane.col = "blue", plane.alpha = .5)
plot3d(fit, which = 1:2, size = 5, col = "red", plane.col = "blue", plane.alpha = .5)
source("~/.active-rstudio-document")
n <- 100
s <- 20
b0 <- 10
b1 <- 2.5
b2 <- 3.2
e <- 10
d <- tibble(p = sample(1:n, s),
q = sample(n:(2 * n - 1), s),
r = (b1 * p + rnorm(s) * e) + (b2 * q + rnorm(s) * e) + b0)
fit <- lm(r ~ p + q, d)
summary(fit)
fit <- lm(r ~ p * q, d)
summary(fit)
plot3d(fit, which = 1:2, size = 5, col = "red", plane.col = "blue", plane.alpha = .5)
fit <- lm(r ~ p + q - 1, d)
summary(fit)
plot3d(fit, which = 1:2, size = 5, col = "red", plane.col = "blue", plane.alpha = .5)
fit <- lm(r ~ p + q, d)
summary(fit)
plot3d(fit, which = 1:2, size = 5, col = "red", plane.col = "blue", plane.alpha = .5)
library(tidyverse)
library(corrplot)
# Personal Involvement Index
source("casestudy2/customer-survey-clean.R")
pii <- customers %>%
select(id, p01:p10) %>%
mutate_at(c(1:2, 7:10) + 1, function(r) 8 - r)
# Personal Involvement Index
source("casestudy2/customer-survey-clean.R")
